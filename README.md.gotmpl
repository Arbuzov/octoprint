# OctoPrint Helm Chart

![Version: {{ .Version }}](https://img.shields.io/badge/Version-{{ .Version }}-informational?style=flat-square)
![AppVersion: {{ .AppVersion }}](https://img.shields.io/badge/AppVersion-{{ .AppVersion }}-informational?style=flat-square)
[![Artifact Hub](https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/octoprint)](https://artifacthub.io/packages/search?repo=octoprint)

OctoPrint is the snappy web interface for your 3D printer that allows you to control and monitor all aspects of your printer and print jobs, right from your browser.

**Homepage:** <https://octoprint.org/>

The original maintainers stopped updating this chart, so this repository revives it to keep deployments running with recent versions of OctoPrint and Helm. Contributions are welcome!

## Maintainers

| Name | Email | Url |
| ---- | ------ | --- |
| Gavin Mogan | <helm@gavinmogan.com> | |
| Serge Arbuzov | <info@whitediver.com> | |

## Source Code

* <https://github.com/Arbuzov/octoprint>
* <https://hub.docker.com/r/octoprint/octoprint>

## Helm Repository

Add this chart repository with:

```sh
helm repo add octoprint https://arbuzov.github.io/octoprint
helm repo update
```

Install the chart with default settings:

```sh
helm install my-octoprint octoprint/octoprint
```

Or provide your own values file:

```sh
helm install my-octoprint -f custom-values.yaml octoprint/octoprint
```

Upgrade using:

```sh
helm repo update
helm upgrade my-octoprint octoprint/octoprint
```

## Configuration

All configurable values are documented in [`values.yaml`](./values.yaml). Key options include:

- `persistence.enabled` – enable to store configuration on a Persistent Volume.
- `ingress.enabled` – expose OctoPrint via an Ingress controller.
- `resourcesPreset` – choose from predefined resource limits (e.g., `micro`, `small`).

You can supply a custom `config.overlay` to merge with OctoPrint's default configuration.


{{ template "chart.valuesSection" . }}

## Development

Run basic checks before submitting changes:

```sh
helm lint .
helm template test-release .
```

When creating a new release, package the chart and update the repository index:

```sh
helm package . -d .deploy
helm repo index .deploy --url https://your.github.io/octoprint
```

The GitHub Actions release workflow lints the chart, packages it, merges the `index.yaml` on the `gh-pages` branch, and automatically commits everything there. The values table above is generated via [helm-docs](https://github.com/norwoodj/helm-docs).

## License

This project is licensed under the [MIT License](./LICENSE).
